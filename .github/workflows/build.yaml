name: Build NextJS image

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
      docker_image_name:
        required: true
        type: string
      docker_registry:
        required: true
        type: string
      image_tag:
        required: false
        type: string
    secrets:
      VAULT_URL:
        required: true
      VAULT_TOKEN:
        required: true
      NPM_TOKEN:
        required: true
      SENTRY_AUTH_TOKEN:
        required: false
    outputs:
      image_id:
        description: "SHA digest for the built image"
        value: "${{ jobs.build.outputs.image_id }}"
      image_registry:
        description: "Docker registry where image was pushed"
        value: "${{ inputs.docker_registry }}"
      image:
        description: "Full image path (including registry)"
        value: "${{ jobs.build.outputs.image }}"
      image_tag:
        description: "Tag for the pushed image"
        value: "${{ jobs.build.outputs.image_tag }}"
      build_id:
        description: "Unique ID for the fresh build"
        value: "${{ jobs.build.outputs.build_id }}"

env:
  BUILDER_IMAGE_NAME: ${{ inputs.project_name }}/${{ inputs.docker_image_name }}-builder
  IMAGE_NAME: ${{ inputs.project_name }}/${{ inputs.docker_image_name }}
  BUILD_CACHE_IMAGE_NAME: ${{ inputs.project_name }}/${{ inputs.docker_image_name }}-build-cache
  VAULT_KEY: ${{ vars.VAULT_ENV }}/data/github-actions/project/${{ inputs.docker_image_name }}
  IMAGE_TAG: ${{ inputs.image_tag || github.sha }}
  GIT_REPO_URL: ${{ github.server_url }}/${{ github.repository }}
  BUILD_ID: # set through a step
  BUILD_TIMESTAMP: # set through a step
  # These come from environment/secrets
  DOCKER_USERNAME:
  DOCKER_PASSWORD:
  SENTRY_ORG:
  SENTRY_PROJECT:
  SENTRY_URL:

jobs:
  build:
    name: Build
    runs-on: self-hosted
    container:
      image: ghcr.io/actions/actions-runner:latest

    outputs:
      image_id: ${{ steps.build_push.outputs.imageid }}
      image: ${{ inputs.docker_registry }}/${{ env.IMAGE_NAME }}
      image_tag: ${{ env.IMAGE_TAG }}
      build_id: ${{ steps.build_meta.outputs.build_id }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Check for deployment branch
        if: startsWith(github.ref, 'refs/heads/deployment/')
        run: |
          echo "DEPLOYMENT_TYPE=$(echo ${{ github.ref }} | cut -d / -f 4)" >> $GITHUB_ENV

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
            ${{ env.VAULT_KEY }}/docker USERNAME | DOCKER_USERNAME ;
            ${{ env.VAULT_KEY }}/docker PASSWORD | DOCKER_PASSWORD

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          #driver: kubernetes
          #driver-opts: |
          #  namespace=github-actions-runner
          #  replicas=4
          #  nodeselector=baremetal=true
          driver: remote
          driver-opts:
          endpoint: tcp://buildkitd:1234
          install: true
          cleanup: true

      - name: Log into Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.docker_registry }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Determine build env variables
        run: |
          echo "build_timestamp=$(date --iso-8601=seconds)" >> $GITHUB_OUTPUT
          echo "build_id=$(date +%Y%m%d)_$(echo $GITHUB_SHA | cut -c -8)_${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
        id: build_meta

      - name: Build bundle
        uses: docker/build-push-action@v5
        id: build_push
        with:
          context: .
          push: true
          build-args: |
            SENTRY_ORG=${{ env.SENTRY_ORG }}
            SENTRY_URL=${{ env.SENTRY_URL }}
            SENTRY_PROJECT=${{ env.SENTRY_PROJECT }}
            BUILD_TIMESTAMP=${{ steps.build_meta.outputs.build_timestamp }}
            BUILD_ID=${{ steps.build_meta.outputs.build_id }}
            GIT_REPO=${{ github.repository }}
            GIT_REV=${{ github.sha }}
            GIT_REPO_URL=${{ env.GIT_REPO_URL }}
            NPM_REGISTRY_SERVER=${{ vars.NPM_REGISTRY_SERVER }}
          secrets: |
            SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
          tags: ${{ inputs.docker_registry }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ inputs.docker_registry }}/${{ env.BUILD_CACHE_IMAGE_NAME }}:cache
          cache-to: type=registry,ref=${{ inputs.docker_registry }}/${{ env.BUILD_CACHE_IMAGE_NAME }}:cache,mode=max,image-manifest=true
        env:
          BUILDX_GIT_LABELS: full
